@{
    Layout = null;
}

<style>
  .wrapper {
      display: flex;
      align-items: stretch;
  }
  
  #sidebar {
      min-width: 250px;
      max-width: 250px;
         min-height: 100vh; 
  }
  
 a[data-toggle="collapse"] {
     position: relative;
 }
 
 .dropdown-toggle::after {
     display: block;
     position: absolute;
     top: 50%;
     right: 20px;
     transform: translateY(-50%);
 } 
  
  #sidebar.active {
      margin-left: -250px;
  } 
   
   
body {
    font-family: 'Poppins', sans-serif;
    background: #fafafa;
}

p {
    font-family: 'Poppins', sans-serif;
    font-size: 1.1em;
    font-weight: 300;
    line-height: 1.7em;
    color: #999;
}

a, a:hover, a:focus {
    color: inherit;
    text-decoration: none;
    transition: all 0.3s;
}

#sidebar {
    /* don't forget to add all the previously mentioned styles here too */
    background: #7386D5;
    color: #fff;
    transition: all 0.3s;
}

#sidebar .sidebar-header {
    padding: 20px;
    background: #6d7fcc;
}

#sidebar ul.components {
    padding: 20px 0;
    border-bottom: 1px solid #47748b;
}

#sidebar ul p {
    color: #fff;
    padding: 10px;
}

#sidebar ul li a {
    padding: 10px;
    font-size: 1.1em;
    display: block;
}
#sidebar ul li a:hover {
    color: #7386D5;
    background: #fff;
}

#sidebar ul li.active > a, a[aria-expanded="true"] {
    color: #fff;
    background: #6d7fcc;
}
ul ul a {
    font-size: 0.9em !important;
    padding-left: 30px !important;
    background: #6d7fcc;
} 

.wrapper {
    display: flex;
    width: 100%;
}

#sidebar {
    width: 250px;
    position: fixed;
    overflow-y:  scroll;
    top: 0;
    left: 0;
    height: 100vh;
    z-index: 999;
    background: #7386D5;
    color: #fff;
    transition: all 0.3s;
}

</style>

@using LearningPlatform.Services
@model LearningPlatform.ViewModels.StudyCourseViewModel
<nav id="sidebar">
    <div class="sidebar-header">
        <h3>@Model.Course.Name</h3>
    </div>

    <ul class="list-unstyled components">
        @if (StudentService.IsAdmin)
        {
            <a class="btn btn-success w-100" asp-route-courseId="@Model.Course.Id" asp-controller="Module" asp-action="CreateModule">Add module</a>
        }
        @foreach (var item in Model.Modules.Select((m, i) => new {i, m}))
        {
            <li class="active">

                <a href="#homeSubmenu@(item.i)" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle">@item.m.Name</a>

                <ul class="collapse list-unstyled" id="homeSubmenu@(item.i)">
                    <p>Lessons</p>
                    @if (StudentService.IsAdmin)
                    {
                        <a class="btn btn-success" asp-controller="Lesson" asp-action="CreateLesson" asp-route-moduleId="@item.m.Id">Add new lesson</a>
                        <a class="btn btn-success" asp-controller="Assignment" asp-action="CreateAssignment" asp-route-courseId="@Model.Course.Id" asp-route-moduleId="@item.m.Id">Add assignment</a>
                    }
                    @for (var order = 0; order < item.m.Assignments.Count + item.m.Lessons.Count; order++)
                    {
                        var lesson = item.m.Lessons.FirstOrDefault(l => l.Order == order);
                        var assignment = item.m.Assignments.FirstOrDefault(a => a.Order == order);

                        @if (@lesson != null)
                        {
                            <li>
                                <a asp-controller="Lesson" asp-action="ShowLesson"
                                   asp-route-courseId="@Model.Course.Id"
                                   asp-route-moduleId="@item.m.Id"
                                   asp-route-lessonId="@lesson?.Id">
                                    @(order). @lesson.Name
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a asp-controller="Assignment" asp-action="ShowAssignment"
                                   asp-route-courseId="@Model.Course.Id"
                                   asp-route-moduleId="@item.m.Id"
                                   asp-route-assignmentId="@assignment?.Id">
                                    @(order). @assignment?.Name
                                </a>
                            </li>
                        }
                    }
                </ul>

            </li>
        }
    </ul>
</nav>